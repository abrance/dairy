TODO
> requirements.txt 安装问题

debian安装python3
************************************************************
debian-install-py3.sh
------------------------------------------------------------
#! /bin/bash
# debian安装python3

# openssl-devel libffi-devel gcc 如果不安装，将会导致后面出问题；其他的没试过
sudo apt-get install aptitude
sudo aptitude -y install gcc make zlib1g-dev libffi-dev libssl-dev

if [ ! -d "/opt/software" ]
  then
    mkdir -p /opt/software
fi

cd /opt/software

wget https://www.python.org/ftp/python/3.6.14/Python-3.6.14.tar.xz
echo "解压 ..."
xz -d Python-3.6.14.tar.xz
tar -xf Python-3.6.14.tar
cd Python-3.6.14

# 配置 ssl，不然pip install会出问题
./configure --prefix=/usr/local/python3 --with-ssl --enable-optimizations

# make altinstall将不会让python3替代原本的python2，不会使yum出问题
make && make altinstall
ln -s /usr/local/python3/bin/python3.6 /usr/bin/python3
ln -s /usr/local/python3/bin/pip3.6 /usr/bin/pip3
------------------------------------------------------------
************************************************************

> 解决mysqlclient==1.3.14安装问题
	>> apt install libmariadb-dev-compat # 安装mysql扩展包安装不上，提示安装mariadb的就可以了
	>> 使用腾讯云镜像即可 pip3 install  mysqlclient==1.3.14 -i http://mirrors.tencentyun.com/pypi/packages/f7/a2

amqp==2.5.2
ansible==2.8.8
asn1crypto==0.24.0
bcrypt==3.1.4
billiard==3.6.3.0
boto3==1.12.14
botocore==1.15.26
celery==4.4.2
certifi==2018.1.18
cffi==1.13.2
chardet==3.0.4
configparser==3.5.0
coreapi==2.3.3
coreschema==0.0.4
cryptography==2.8
decorator==4.1.2
Django==2.2.13
django-auth-ldap==1.7.0
django-bootstrap3==9.1.0
django-celery-beat==1.4.0
django-filter==2.0.0
django-formtools==2.1
django-ranged-response==0.2.0
django-redis-cache==2.1.1
django-rest-swagger==2.1.2
django-simple-captcha==0.5.6
django-timezone-field==3.1
djangorestframework==3.9.4
djangorestframework-bulk==0.2.1
docutils==0.14
ecdsa==0.13.3
enum-compat==0.0.2
ephem==3.7.6.0
eventlet==0.24.1
future==0.16.0
ForgeryPy3==0.3.1
greenlet==0.4.14
gunicorn==19.9.0
idna==2.6
itsdangerous==0.24
itypes==1.1.0
Jinja2==2.10.1
jmespath==0.9.3
kombu==4.6.8
ldap3==2.4
MarkupSafe==1.1.1
mysqlclient==1.3.14
olefile==0.44
openapi-codec==1.3.2
paramiko==2.4.2
passlib==1.7.1
Pillow==7.1.0
pyasn1==0.4.8
pycparser==2.19
pycrypto==2.6.1
pyotp==2.2.6
PyNaCl==1.2.1
python-dateutil==2.6.1
python-gssapi==0.6.4
pytz==2018.3
PyYAML==5.1
redis==3.2.0
requests==2.22.0
jms-storage==0.0.34
s3transfer==0.3.3
simplejson==3.13.2
six==1.11.0
sshpubkeys==3.1.0
uritemplate==3.0.0
urllib3==1.25.2
vine==1.3.0
drf-yasg==1.9.1
Werkzeug==0.15.3
drf-nested-routers==0.91
aliyun-python-sdk-core-v3==2.9.1    
aliyun-python-sdk-ecs==4.10.1   
rest_condition==1.0.3
python-ldap==3.1.0
tencentcloud-sdk-python==3.0.40
django-radius==1.4.0
ipip-ipdb==1.2.1
django-redis-sessions==0.6.1
unicodecsv==0.14.1
python-daemon==2.2.3
httpsig==1.3.0
treelib==1.5.3
django-proxy==1.2.1
flower==0.9.3
channels-redis==2.4.0
channels==2.3.0
daphne==2.3.0
psutil==5.6.6
django-cas-ng==4.0.1
python-cas==1.5.0
ipython
huaweicloud-sdk-python==1.0.21
django-redis==4.11.0
python-redis-lock==3.5.0
jumpserver-django-oidc-rp==0.3.7.5

debian安装virtualenvwrapper环境
************************************************************
install-virtualenvwrapper.sh
------------------------------------------------------------
#! /bin/bash

# 安装python3 的虚拟环境 virtualenvwrapper
echo 'install virtualenv tool ....'
pip3 install virtualenv -i https://pypi.tuna.tsinghua.edu.cn/simple
pip3 install virtualenvwrapper -i https://pypi.tuna.tsinghua.edu.cn/simple
mkdir /root/py_vm

# 添加wrapper的配置
echo -e "export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3\nexport WORKON_HOME=~/py_vm\nexport VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/python3/bin/virtualenv\nsource /usr/local/python3/bin/virtualenvwrapper.sh" >> ~/.bashrc
------------------------------------------------------------
************************************************************

linux创建ll命令
************************************************************
create-ll.sh
------------------------------------------------------------
#! /bin/bash

# 创建ll命令 也就是 ls -lh 的快捷方式
echo "alias ll='ls $LS_OPTIONS -lh'" >>  ~/.bashrc
------------------------------------------------------------
************************************************************

jumpserver 核心组件
> core 是核心组件 内置了lion celery 和flower daphne
> luna
> lina
> koko
> lion


************************************************************
debian-install-mysql8.sh
------------------------------------------------------------

wget https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-server_8.0.27-1debian10_amd64.deb-bundle.tar

tar xvf mysql-server_8.0.27-1debian10_amd64.deb-bundle.tar
cd mysql-server_8.0.27-1debian10_amd64.deb-bundle

dpkg -i mysql-common_8.0.27-1debian10_amd64.deb
dpkg -i client-plugin
# 这里设置密码
dpkg-preconfigure mysql-community-server 
communite-client-core
client
communite-server-core
server

systemctl status mysql
------------------------------------------------------------
************************************************************

debian安装redis
************************************************************
debian-install-redis.sh
------------------------------------------------------------
#! /bin/bash
apt install redis-server
------------------------------------------------------------
************************************************************

centos安装emacs
************************************************************
centos-install-emacs.sh
------------------------------------------------------------
#!/bin/bash

echo "install emacs ..."
yum install wget gcc ncurses-devel clang git -y

if [ ! -d "/opt/software" ]
  then
    mkdir -p /opt/software
fi

cd /opt/software

wget https://mirrors.sjtug.sjtu.edu.cn/gnu/emacs/emacs-26.3.tar.xz
xz -d emacs-26.3.tar.xz  # 解压
tar -xvf emacs-26.3.tar
cd emacs-26.3  # 进入安装目录
# 配置参数 提示什么就加上什么参数
./configure --with-x-toolkit=no  --with-gif=no --with-tiff=no  --with-gnutls=no  --with-jpeg=no  --with-png=no --with-xpm==no
make && make install
# 安装完毕
# 加载常用配置
mkdir settings
git clone https://github.com/abrance/emacs_set.git settings
cd settings
mkdir -p ~/.emacs.d/elpa
cp --force init.el ~/.emacs.d
cp -r --force --parents elpa ~/.emacs.d
echo "install end"
------------------------------------------------------------
************************************************************
