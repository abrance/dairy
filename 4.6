> TODO
	Server VS ->  rDS

> VH 这一层为什么有 ssl ，我们怎么为 VH 配置

> 通过访问 APISERVER 把DAM项目使用的所有的 API 列举出来

> webserver admission API 整理
	>> webserver 
		>>> User
		>>> Role
		>>> user-role
		>>> role-admission
		>>> admission
			...
		>>> 自定义 API
		>>> APISERVER API
			>>>> DAM
				>>>>> gateway 层 API
				>>>>> dam 层 API
			>>>> device
	>> 静态资源
		...


> SSL 卸载
	>> 链接 https://www.racent.com/blog/ssl-offloading-bridging-termination
	>> 背景
		>>> SSL 在网络协议栈生命周期中需要消耗一定计算资源，为了不让计算能力成为请求处理节点的瓶颈（功能单一化），采用 SSL 卸载技术解决上面问题
	>> 概述
		SSL 卸载技术通过将HTTPS应用访问过程中的SSL加密解密过程转移到特定的集成电路（ASIC）处理器上，在满足高并发访问需求的同时，为程序或网站释放出处理能力，从而减少服务器端的性能压力，最终提升客户端的访问响应速度。
	>> 原理
		>>> SSL 终结
			将专用的SSL应用交付设备（采用专用的SSL卸载硬件芯片）置于网络服务器的前端，把所有传入的客户端请求引导到服务器，在服务器之间平衡或分配客户端的负载，使客户端只需要和SSL应用交付设备交互即可。这样，任何服务器的承载能力都不会过载；同时，客户端发起的HTTPS连接，经过SSL应用交付设备处理后，变成明文的HTTP数据，即可被WEB服务程序(例如IIS、APACHE)直接读取，无需特殊的驱动程序来传送和接受网络数据，从而提高服务器性能。这一过程中，当客户端尝试连接到网站时，首先会连接到SSL应用交付设备——该连接是HTTPS；而交付设备和应用服务器之间的连接是HTTP。其中，SSL应用交付设备充当了SSL终结器的角色，因此这一过程又称为SSL终结。
------------------------------------------------------------
┌────┐   Https-A                           Http      ┌────────┐
│user├───────────────┐                ┌──────────────┤service │
└────┘               ▼                ▼              └────────┘
                  ┌─────────────────────┐
┌────┐   Https-B  │                     │  Http      ┌────────┐
│user├───────────►│SSLUninstallWebserver│◄───────────┤service │
└────┘            │                     │            └────────┘
                  └─────────────────────┘
┌────┐   Https-C     ▲                ▲    Http      ┌────────┐
│user├───────────────┘                └──────────────┤service │
└────┘                                               └────────┘

可以为不同的服务端集群管理对应的不同的 SSL 连接，在到达真实的服务之前，已经解码出真实的 http 请求，为真实的处理节点减轻压力
------------------------------------------------------------
		>>> SSL 桥接
------------------------------------------------------------
┌────┐   Https-A                           Https-A1  ┌────────┐
│user├───────────────┐                ┌──────────────┤service │
└────┘               ▼                ▼              └────────┘
                  ┌─────────────────────┐
┌────┐   Https-B  │                     │  Https-B1  ┌────────┐
│user├───────────►│SSLUninstallWebserver│◄───────────┤service │
└────┘            │                     │            └────────┘
                  └─────────────────────┘
┌────┐   Https-C     ▲                ▲    Https-C1  ┌────────┐
│user├───────────────┘                └──────────────┤service │
└────┘                                               └────────┘

可以自定义的将下游用户端 https 卸载，而组装上游服务端的 https 请求
------------------------------------------------------------
	>> 优势
		提高服务器性能
		降低管理员操作复杂度
		ssl 网络协议解耦 以及 解耦后更方便做更多工作 如 https检查 反向代理 流量管理等





	
